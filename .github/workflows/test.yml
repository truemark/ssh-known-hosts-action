name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

permissions:
  id-token: write
  contents: write

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          npm install
      - run: |
          npm run all
  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "${{ secrets.AWS_ASSUME_ROLE }}"
          aws-region: "us-east-2"
      - name: Generate SSH Key
        id: ssh-key
        uses: truemark/generate-ssh-key-action@v2
      - name: Setup instance
        id: instance
        uses: truemark/aws-ec2-run-instance-action@v4
        with:
          security-group-id: "${{ vars.SECURITY_GROUP_ID }}"
          subnet-id: "${{ vars.SUBNET_ID }}"
          instance-profile: "${{ vars.INSTANCE_PROFILE }}"
          region: "us-east-2"
          image-id: "default-arm64"
          instance-type: "c7g.large"
          user-data: |
            #!/usr/bin/env bash
            mkdir -p /home/ec2-user/.ssh
            touch /home/ec2-user/.ssh/authorized_keys
            chmod 700 /home/ec2-user/.ssh
            chmod 600 /home/ec2-user/.ssh/authorized_keys
            echo "${{ steps.ssh-key.outputs.public-key }}" >> /home/ec2-user/.ssh/authorized_keys
      - name: Wait for instances
        id: ec2-wait
        uses: truemark/aws-ec2-instance-wait-action@v3
        with:
          instance-ids: ${{ steps.instance.outputs.instance-id }}
          region: "us-east-2"
          timeout-ms: "600000"
      - name: Describe Instance
        id: describe-instance
        uses: truemark/aws-ec2-describe-instance-action@v2
        with:
          instance-id: ${{ steps.instance.outputs.instance-id }}
          region: "us-east-2"
      - name: SSH Known Hosts
        id: ssh-known-hosts
        uses: ./
        with:
          scan-hosts: ${{ steps.describe-instance.outputs.public-dns-name }}
      - name: Validate
        run: ssh ec2-user@${{ steps.describe-instance.outputs.public-dns-name }} "cat /etc/amazon-linux-release"
